<?phpclass CategoryModel extends CI_Model {    const TABLE = 'category';    const DISPLAY = 10;    private $categories = array();    public function __construct() {        parent::__construct();        $all = $this->db->order_by('parent_id')->order_by('name')->get(CategoryModel::TABLE)->result_array();        $this->process($all);    }    private function process(&$all) {        foreach ($all as $cat) { // phân loại root và con            if ($cat['parent_id'] == 0) { // root                $this->categories[$cat['id']] = $cat;            } else {                $this->categories[$cat['parent_id']]['child'][$cat['id']] = $cat;            }        }        ksort($this->categories);    }    private function _get_by_slug($slug) {        foreach ($this->categories as $key => &$parent) {            if ($parent['slug'] === $slug) {                return $parent;            }            if (isset($parent['child'])) {                foreach ($parent['child'] as &$child) {                    if ($child['slug'] === $slug) {                        return $child;                    }                }            }        }    }    private function _get_by_id($id) {        if (isset($this->categories[$id])) {            return $this->categories[$id];        }        foreach ($this->categories as &$parent) {            if (isset($parent['child'][$id])) {                return $parent['child'][$id];            }        }    }// SIDEBAR     public function &getAll() {        return $this->categories;    }// TRANG PRODUCT DETAIL    public function getById($id) {        return $this->_get_by_id($id);//        $query = $this->db->select('slug, name, parent_id')->where('id', $id)->get(CategoryModel::TABLE);//        return $query->row_array();    }// TRANG CATEGORY    public function getBySlug($slug) {//        $slug = $this->db->escape_str($slug);//        $query = $this->db->select('id, name, parent_id')->where('slug', $slug)->get(CategoryModel::TABLE);//        return $query->row_array();        return $this->_get_by_slug($slug);    }    public function getPageNum(&$category) {        $product_num = $this->db->from('product')->where('cat_id', $category['id'])->count_all_results();        if (!empty($category['child'])) { // ROOT            $list = array_keys($category['child']);            $product_num += $this->db->from('product')->where_in('cat_id', $list)->count_all_results();        }        return ceil($product_num / CategoryModel::DISPLAY);    }    public function getPageProducts($category, $page) {        $start = ($page - 1) * CategoryModel::DISPLAY;        if (empty($category['child'])) {            $query = $this->db->select('slug, describe, name, img, price, warranty')->where('cat_id', $category['id'])->limit(CategoryModel::DISPLAY, $start);        } else {            // $list = $this->getChildrenId($category['id']);            $list = array_keys($category['child']);            $list[] = $category['id'];            $query = $this->db->select('slug, describe, name, img, price, warranty')->where_in('cat_id', $list)->limit(CategoryModel::DISPLAY, $start);        }        $res = $query->get('product');        return $res->result_array();    }// TRANG FILTER    // loc theo gia    public function getFilterPage($min, $max, $cat_id = 0) {        $this->db->where(array('price >=' => $min, 'price <=' => $max));        $category = $this->_get_by_id($cat_id);        if (isset($category)) {            if (empty($category['child'])) {                $this->db->where('cat_id', $cat_id);            } else {                $list = array_keys($category['child']);                $list[] = $category['id'];                $this->db->where_in('cat_id', $list);            }        }        $product_num = $this->db->from('product')->count_all_results();        return ceil($product_num / CategoryModel::DISPLAY);    }    public function getByPrice($min, $max, $cat_id = 0, $page = 1) {        $start = ($page - 1) * CategoryModel::DISPLAY;        $this->db->select('name, slug, price, img, warranty, describe')->order_by('date')->limit(ProductModel::DISPLAY, $start);        $this->db->where(array('price >=' => $min, 'price <=' => $max));        $category = $this->_get_by_id($cat_id);        if (isset($category)) {            if (empty($category['child'])) {                $this->db->where('cat_id', $cat_id);            } else {                $list = array_keys($category['child']);                $list[] = $category['id'];                $this->db->where_in('cat_id', $list);            }        }        $query = $this->db->get('product');        return $query->result_array();    }}?>