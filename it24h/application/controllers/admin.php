<?php if (!defined('BASEPATH'))    exit('No direct script access allowed');class Admin extends CI_Controller {    function __construct() {        parent::__construct();        session_start();        if (!isset($_SESSION['admin'])) { // chưa login            redirect('adminlogin');        } else {            $this->load->library('grocery_CRUD');        }    }    public function index() {        $this->order();    }    public function order() {        $crud = new grocery_CRUD();        $crud->set_table('order');        $crud->unset_add();        $crud->display_as('name', 'Tên khách hàng')->display_as('phone', 'Điện thoại')                ->display_as('date', 'Ngày giao hàng')->display_as('address', 'Địa chỉ giao hàng')                ->display_as('note', 'Ghi chú')->display_as('stt', 'Trạng thái');        $crud->add_action('Detail', site_url() . 'assets/images/smiley.png', 'admin/order_detail');        $crud->field_type('stt', 'dropdown', array('0' => 'Chưa giao hàng', '1' => 'Đã giao hàng', '2' => 'Huỷ giao dịch'));        $this->render($crud->render());    }    public function order_detail($order_id) {        $crud = new grocery_CRUD();        $crud->set_table('order_detail');        $crud->where('order_id', $order_id);        $crud->set_relation('product_id', 'product', 'name');        $crud->add_action('Xem', site_url() . 'assets/images/smiley.png', '', '', array($this, 'view_product'));        $crud->unset_add();        $crud->unset_edit();        $crud->unset_delete();        $crud->unset_columns('order_id');        $crud->display_as('product_id', 'Tên sản phẩm')->display_as('quanity', 'Số lượng');        $this->render($crud->render());    }    function view_product($primary_key, $row) {        return site_url() . 'admin/product/read/' . $row->product_id;    }    public function category() {        $crud = new grocery_CRUD();        $crud->set_table('category');        $crud->unique_fields('slug');        $crud->set_relation('parent_id', 'category', 'name', array('parent_id' => '0'));        $crud->required_fields('name');        $crud->display_as('name', 'Tên danh mục')->display_as('parent_id', 'Danh mục cha');        $crud->callback_before_insert(array($this, 'slug_callback'));        $crud->callback_before_update(array($this, 'slug_callback'));        $this->render($crud->render());    }    public function valueToVND($value, $row) {        return number_format($value) . ' VNĐ';    }    public function product($cat_id = 0) {//        $a = func_get_args();//        $this->is_update = !empty($a);        $crud = new grocery_CRUD();        $crud->set_table('product');        if ($cat_id != 0) {            $category = $this->categoryModel->getById($cat_id);            $crud->where('cat_id', $cat_id);            if (!empty($category['child'])) {                $list = array_keys($category['child']);                foreach ($list as $item) {                    $crud->or_where('cat_id', $item);                }            }        }        $crud->unique_fields('slug');        $crud->set_relation('cat_id', 'category', 'name');        $crud->required_fields('name', 'price', 'img');        $crud->field_type('price', 'integer');        $crud->set_rules('price', 'Đơn giá', 'integer')->set_rules('warranty', 'Bảo hành', 'integer');        $crud->set_field_upload('img', 'assets/uploads/product');        $crud->callback_column('price', array($this, 'valueToVND'));        $crud->display_as('name', 'Tên sản phẩm')->display_as('cat_id', 'Danh mục')->display_as('date', 'Ngày nhập')                ->display_as('img', 'Hình ảnh')->display_as('warranty', 'Bảo hành')                ->display_as('price', 'Đơn giá')->display_as('describe', 'Mô tả');        $crud->callback_before_insert(array($this, 'product_insert_callback'));        $crud->callback_before_update(array($this, 'slug_callback'));        $this->load->view('admin/product.php', $crud->render());    }    public function article() {        $crud = new grocery_CRUD();        $crud->set_table('article');        $crud->unique_fields('slug');        $crud->required_fields('title', 'content');        $crud->set_field_upload('img', 'assets/uploads/article');        $crud->display_as('title', 'Tiêu đề')->display_as('content', 'Nội dung')->display_as('img', 'Hình ảnh')->display_as('is_service', 'Loại');        $crud->field_type('is_service', 'dropdown', array('0' => 'Thủ thuật', '1' => 'Dịch vụ'));        $crud->callback_before_insert(array($this, 'slug_callback'));        $crud->callback_before_update(array($this, 'slug_callback'));        $this->render($crud->render());    }    function product_insert_callback($post_array) {        $post_array = $this->date_callback($post_array);        return $this->slug_callback($post_array);    }    function date_callback($post_array) {        if (empty($post_array['date'])) {            $post_array['date'] = date("Y-m-d");        }        return $post_array;    }    function slug_callback($post_array) {        if (!empty($post_array['slug'])) {            $post_array['slug'] = $this->slug($post_array['slug']);        } else {            $post_array['slug'] = $this->slug($post_array['name']);        }        return $post_array;    }    public function slug($str) {        $str = preg_replace('/( )+/', ' ', $str);        $str = trim($str);        $str = str_replace(' ', '-', str_replace('&*#39;', ' ', $str));        return $str;    }    function render($output = null) {        $this->load->view('admin/example.php', $output);    }}?>